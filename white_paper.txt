Introduction

Quantum computing is a field of computing which uses the laws of quantum mechanics to solve problems which are too complex for classical computers.
Classical computers are made of bits which can hold 0 or 1, whereas quantum computers are made of qubits which can hold value 0 or 1
or a quantum superposition of these states. If there are 4 states, classical computers need 2 bits to store them as 00,01,10,11 
Quantum can store any of the 4 states in a single bit as it can store 0,1 and their superpositions.
This when scaled, gives a significant increase of performance over classical.
This enables quantum mechanical effects such as interference, tunneling, and entanglement, which in turn empower quantum algorithms for faster 
searching, better optimization, and greater security.

Our problem is formulated as a Quantum Inspired Optimization(QIO), which is run on a classical computer but uses quantum techniques to achieve better
results.


Objective Function


The optimal portfolio allocation is found by maximising the expected portfolio fractional return and minimising the portfolio variance.
This becomes a mixed-integer quadratic programming problem. The return vector  r  can be modelled as a random variable with mean  E[r]=μ  
and covariance  E[(r−μ)(r−μ)T]=Σ .Therefore the return vector is calculated as the mean of the daily returns. The risk is modelled as the covariance matrix.
It follows that the portfolio return is also a random variable with mean  E[R]=μTx  and variance  Var[R]=xTΣx.

The problem can be represented classically as  (image).


Since an investor might also have a constraint on budget which can affect the optimal portfolio available to them, the problem defintion is subjected to a
budget constraint. In order to quantize the problem, the weight of eachs stock in the portfolio is replaced by a decision vector. 
Consequently the budget is normalized to the stock appetite, or the number of stocks an investor can/wants to invest in. To incorporate the constraint,
a penalty model is used - a penaltyis added to objective function when the constraintin violated. This is done by using a  soft constraint by 
making use of a slack variable. Finally, in an attempt to conceptualise the optimized portfolio, equal distribution of an actual 
given budget is done which is used to calcualte the number of shares for each selected stock proportionally.
Thus the objective function used is given by the QUBO problem's hamiltonian as-
(image)


Algorithm and solver-

Our objective function is a <i> Quadratic Unconstrained Binary Optimization (QUBO) </i>. QUBO is an <i><b>NP hard problem</b></i> which can be solved 
through quantum anneling or parallel tempering. In our solution, we have submitted our model to the <b><i>Parallel Tempering solver of Azure Quantum.
</i></b>

Parallel tempering is a computer simulation method typically used to find the lowest free energy state of a system of many interacting particles at 
low temperature. More specifically, parallel tempering (also known as replica exchange MCMC sampling), is a simulation method aimed at improving 
the dynamic properties of Monte Carlo method simulations of physical systems.

Essentially, one runs N copies of the system, randomly initialized, at different temperatures. 
Then, based on the Metropolis criterion one exchanges configurations at different temperatures. The idea of this method is to make configurations 
at high temperatures available to the simulations at low temperatures and vice versa. 
This results in a very robust ensemble which is able to sample both low and high energy configurations. 
In this way, thermodynamical properties such as the specific heat, which is in general not well computed in the canonical ensemble, can be computed 
with great precision.

To submit the problem to Azure's Parallel Tempering solver, the objective function along with the constraints should be in the form of a list of-
Terms(c= <co-efficient>, indices = <list of indices>)
The risk term, return term and the penalty function are modelled as a list of these Terms and the linear combination of them is passed to the solver.
The result obtained from the solver is in the form of a binary list, representing whether to pick that particular stock or not. 
Using this,the number of shares to invest in each stock is calculated by equally distributing the budget to all selected stocks.
The final portfolio expected returns and portfolio risk is back-calculated using the result obtained from thr solver.


Quantum over classical-

Future scope-

Conclusion-










